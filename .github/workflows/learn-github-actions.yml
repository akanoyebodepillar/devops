name: Build, Test, and Publish Flask Application

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests with pytest and generate JUnit XML report
        run: |
          source venv/bin/activate
          pytest testapp.py --junitxml=report.xml

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: report.xml

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Add test results to GitHub Actions summary
        run: |
          npm install @actions/core
          node -e "const fs = require('fs'); const core = require('@actions/core'); const report = fs.readFileSync('report.xml', 'utf8'); core.summary.addRaw(report).write();"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 # Change this to your region

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: 339712760713.dkr.ecr.us-west-2.amazonaws.com/userapi # Change this to your repository name
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
